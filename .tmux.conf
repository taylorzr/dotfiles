# Options

set -g mouse on
set -g status off
set-option -g default-shell /bin/zsh
setw -g mode-keys vi # Use vim keybindings in copy mode

unbind C-b
set-option -g prefix C-Space
# Easier last session
bind-key C-Space switch-client -l

# Plugins
# {{{

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'taylorzr/tmux-reaper'
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'laishulu/emacs-tmux-pane'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
run '~/.tmux/plugins/tpm/tpm'

# }}}

# Panes
# {{{

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?|emacs$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# colemak style
bind-key -n C-Left if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-Down if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-Up if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-Right if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind-key -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# }}}

# Key Bindings
# {{{

# Visual pneumonic splits
bind-key - split-window -c "#{pane_current_path}"
bind-key '\' split-window -h -c "#{pane_current_path}"
bind-key \' split-window -h -c "#{pane_current_path}"
bind-key Enter split-window -h -c "#{pane_current_path}"


# Easier backwards search (needs to come after something above that also binds
# to this key)
bind-key / copy-mode\; command-prompt -p "search up" "send -X search-backward '%%%'"

# Easier scroll back
bind-key j copy-mode
bind-key k copy-mode
bind-key C-u copy-mode

# Focus pane/vim buffer
bind-key -n C-f if-shell "$is_vim" "resize-pane -Z; send-keys C-w _ C-w |" "resize-pane -Z"

bind-key -n C-Enter resize-pane -Z

# Keep mouse selection on mouse release
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# brew install reattach-to-user-namespace
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Extrakto rebind
set -g @extrakto_key "Space"
#}}}

# OS Config
# {{{

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.config/tmux/osx.conf'
if-shell 'test "$(uname)" = "Linux"' 'source ~/.config/tmux/linux.conf'

# }}}

bind-key s choose-session
bind-key f run "tmux new-window 'zsh -ci fs'"

# set -g window-style 'fg=default,bg=#303341'
# set -g window-active-style 'fg=default,bg=#282a36'
set -g window-style 'fg=default,bg=default'
set -g window-active-style 'fg=default,bg=default'

# Only show status bar when > 1 window
# https://www.reddit.com/r/tmux/comments/6lwb07/is_it_possible_to_hide_the_status_bar_in_only_a/dpzr5d7/
# if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
# set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
# set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set -g status-right "#[fg=green]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --colors --powerline-right --interval 2)#[default]"

# I can't remember kill-window is &, but I don't remember kill-pane is x, so maybe X makes sense?
bind-key X kill-window

# - WARNING: Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.
#   - ADVICE:
#     - Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:
#         set-option -sa terminal-overrides ',XXX:RGB'
#     - For older tmux versions use this instead:
#         set-option -ga terminal-overrides ',XXX:Tc'
set-option -sa terminal-overrides ',xterm-256color:RGB'

# More recent tmux doesn't sort alphabetically by default
# https://unix.stackexchange.com/questions/608268/how-can-i-force-tmux-to-sort-my-sessions-alphabetically
bind s choose-tree -s -O name

